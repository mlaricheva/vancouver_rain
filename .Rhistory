scale_fill_gradient(
low ="lightblue1", high = "lightsteelblue4")+
theme_minimal()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
View(data)
1:29
runApp()
month.name
type(month.name)
?month.name
typeof(month.name)
month.name
runApp()
as.integer(factor(months, levels = month.name))
as.integer(factor(c(1:12), levels = month.name))
as.integer(factor(1:12), levels = month.name))
as.integer(factor(1:12), levels = month.name)
factor((1:12), levels = month.name)
factor(c(1:12), levels = month.name)
factor(1:12, levels = month.name)
runApp()
runApp()
month.name[4]
runApp()
runApp()
runApp()
runApp()
install.packages("mdthemes")
runApp()
View(data)
runApp()
runApp()
runApp()
runApp()
runApp()
month
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
data <- read.csv("data/rain_data.csv")
data <- data %>% select(-X)
data %>%
filter(year == 2020) %>%
filter(month == 4) %>%
ggplot() +
geom_col(aes(x = day, y = rain, fill = rain)) +
scale_fill_gradient(
low ="lightblue1", high = "lightsteelblue4")+
theme_minimal()
data %>%
group_by(month) %>%
summarise(mean = mean(rain))
View(data)
data %>%
group_by(month) %>%
summarise(mean_rain = mean(rain))
data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE))
runApp()
runApp()
runApp()
runApp()
data %>%
filter(month == as.numeric(1)) %>%
mutate(mean = mean(rain, na.rm = TRUE))
data %>%
filter(month == as.numeric(1)) %>%
mutate(mean = mean(rain, na.rm = TRUE))
runApp()
runApp()
runApp()
data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1)
data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1)
data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1) %>%
select(mean)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mean_rain <- data.frame(month = input$month, mean = -1)
mean_rain <- data.frame(month = 2 mean = -1)
mean_rain <- data.frame(month = 2, mean = -1)
View(mean_rain)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(RColorBrewer)
data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1) %>%
select(mean)
data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1)
data <- read.csv("data/rain_data.csv")
data <- data %>% select(-X)
data %>%
filter(year == 2020) %>%
filter(month == 4) %>%
ggplot() +
geom_col(aes(x = day, y = rain, fill = rain)) +
scale_fill_gradient(
low ="lightblue1", high = "lightsteelblue4")+
theme_minimal()
data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mean_rain <- data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1)
mean_rain$cur_mean <- 1
mean_rain <- data %>%
group_by(month) %>%
summarise(mean = mean(rain, na.rm = TRUE)) %>%
filter(month == 1)
mean_rain$cur_mean <- 1
mean_rain
runApp()
runApp()
data <- read.csv("data/rain_data.csv")
data <- data %>% select(-X)
filtered <- data %>%
filter(year == 2020) %>%
filter(month == 4)
ggplot() +
geom_col(aes(x = day, y = rain, fill = rain)) +
scale_fill_gradient(
low ="lightblue1", high = "lightsteelblue4")+
theme_minimal()
mean(filtered$rain)
mean <- mean(filtered$rain)
mean
runApp()
View(filtered)
data <- read.csv("data/rain_data.csv")
data <- data %>% select(-X)
filtered <- data %>%
filter(year == 2020, month ==4)
ggplot() +
geom_col(aes(x = day, y = rain, fill = rain)) +
scale_fill_gradient(
low ="lightblue1", high = "lightsteelblue4")+
theme_minimal()
View(filtered)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("devtools")
install.packages("dplyr")
install.packages("ggplot2")
library(dplyr)
library(ggplot2)
library(shiny)
runApp()
runApp()
runApp()
install.packages("glue")
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("shinyjs")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("waffle")
runApp()
runApp()
weather <- filtered() %>%
group_by(day_weather) %>%
count()
weather <- filtered %>%
group_by(day_weather) %>%
count()
filtered <- data %>%
filter(year == input$year, month == input$month) %>%
mutate(day_weather = case_when(
rain == 0 ~ "no rain",
rain < 10 ~ "some rain",
rain < 20 ~ "moderate rain",
rain > 20 ~ "heavy rain"
))
filtered <- data %>%
filter(year == 2020, month == "January") %>%
mutate(day_weather = case_when(
rain == 0 ~ "no rain",
rain < 10 ~ "some rain",
rain < 20 ~ "moderate rain",
rain > 20 ~ "heavy rain"
))
weather <- filtered %>%
group_by(day_weather) %>%
count()
View(weather)
filtered <- data %>%
filter(year == 2020, month == 3) %>%
mutate(day_weather = case_when(
rain == 0 ~ "no rain",
rain < 10 ~ "some rain",
rain < 20 ~ "moderate rain",
rain > 20 ~ "heavy rain"
))
View(filtered)
weather <- filtered %>%
group_by(day_weather) %>%
count()
View(weather)
waffle(weather)
days <- as.character(weather$n)
names(days) <- weather$day_weather
waffle(days)
days <- as.integer(weather$n)
names(days) <- weather$day_weather
waffle(days)
waffle(days, flip = TRUE)
waffle(days, flip = TRUE, xlab = "days")
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE, reverse = TRUE)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE, reverse = TRUE) +
scale_fill_manual(values = c("bee9ff", "90aebf", "62747f", "34393f"),
labels = c("no rain", "some rain", "moderate rain", "heavy rain"),
drop = TRUE)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE, reverse = TRUE) +
scale_fill_manual(values = c("BEE9FF", "90aebf", "62747f", "34393f"),
labels = c("no rain", "some rain", "moderate rain", "heavy rain"),
drop = TRUE)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE, reverse = TRUE) +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f"),
labels = c("no rain", "some rain", "moderate rain", "heavy rain"),
drop = TRUE)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE) +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f"),
labels = c("no rain", "some rain", "moderate rain", "heavy rain"),
drop = TRUE)
ggplot(data = weather) +
geom_waffle(flip = TRUE, xlab = "days", use_glyph = TRUE) +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f"),
labels = c("no rain", "some rain", "moderate rain", "heavy rain"),
drop = TRUE)
weather_levels <- levels(c("no rain", "some rain", "moderate rain", "heavy rain"))
weather_levels <- factor(
c(0,10,20,20),
levels(c("no rain", "some rain", "moderate rain", "heavy rain"))
)
weather_levels <- levels=(c("no rain", "some rain", "moderate rain", "heavy rain"))
weather_levels <- levels=(c("no rain", "some rain", "moderate rain", "heavy rain"))
weather_levels <- factor(
c(0,10,20,20),
levels=(c("no rain", "some rain", "moderate rain", "heavy rain"))
)
weather_levels <- c("no rain", "some rain", "moderate rain", "heavy rain")
cut(filtered$rain, breaks = c(0, 10, 20), right = FALSE
labels = weather_levels)
cut(filtered$rain, breaks = c(0, 10, 20), right = FALSE, labels = weather_levels)
cut(filtered$rain, breaks = c(0, 10, 20, 20), right = FALSE, labels = weather_levels)
cut(filtered$rain, breaks = c(0, 10, 20, 1000), right = FALSE, labels = weather_levels)
cut(filtered$rain, breaks = c(0, 10, 20, 1000), labels = weather_levels)
cut(filtered$rain, breaks = c(0, 10, 20, 100, 1000), labels = weather_levels)
cut(filtered$rain, breaks = c(0, 10, 20, 100, Inf), labels = weather_levels)
cut(filtered$rain, breaks = c(-1, 0, 10, 20, Inf), labels = weather_levels)
filtered$rain
filtered <- data %>%
filter(year == 2020, month == 3)
filtered$day_weather <- cut(filtered$rain, breaks = c(-1, 0, 10, 20, Inf), labels = weather_levels)
filtered %>%
group_by(day_weather) %>%
count() %>%
arrange(factor(day_weather))
weather <- filtered %>%
group_by(day_weather) %>%
count() %>%
arrange(factor(day_weather))
days <- as.integer(weather$n)
names(days) <- weather$day_weather
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE) +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f"),
labels = weather_levels,
drop = TRUE)
View(weather)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE, reverse = T) +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f"),
labels = weather_levels,
drop = TRUE)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE, reverse = T)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE, reverse = T,
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f"))
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE,
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f"), labels = weather_levels)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE,
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f"))
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE,
tableau_color_pal()(length(days))))
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE,
colors = tableau_color_pal()(length(days)))
library(ggthemes)
waffle(days, flip = TRUE, xlab = "days", use_glyph = TRUE,
colors = tableau_color_pal()(length(days)))
c("#bee9ff", "#90aebf", "#62747f", "#34393f")(2)
waffle(days, flip = TRUE, xlab = "days") +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)],
labels = weather_levels[1:length(days)],
drop = TRUE)
waffle(days, flip = TRUE, xlab = "days") +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f"),
labels = weather_levels,
drop = TRUE)
waffle(days, flip = TRUE, keep = TRUE, xlab = "days") +
scale_fill_manual(values = c("#bee9ff", "#90aebf", "#62747f", "#34393f"),
labels = weather_levels,
drop = TRUE)
waffle(days, flip = TRUE, keep = TRUE, xlab = "days")
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f"))
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
filtered <- data %>%
filter(year == 2020, month == 4)
weather <- filtered %>%
group_by(day_weather) %>%
count() %>%
arrange(factor(day_weather))
days <- as.integer(weather$n)
names(days) <- weather$day_weather
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
filtered <- data %>%
filter(year == 2020, month == 11)
weather <- filtered %>%
group_by(day_weather) %>%
count() %>%
arrange(factor(day_weather))
days <- as.integer(weather$n)
names(days) <- weather$day_weather
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
weather_levels <- c("no rain", "some rain", "moderate rain", "heavy rain")
filtered$day_weather <- cut(filtered$rain, breaks = c(-1, 0, 10, 20, Inf), labels = weather_levels)
filtered <- data %>%
filter(year == 2002, month == 11)
weather <- filtered %>%
group_by(day_weather) %>%
count() %>%
arrange(factor(day_weather))
days <- as.integer(weather$n)
names(days) <- weather$day_weather
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
filtered <- data %>%
filter(year == 2002, month == 11)
filtered$day_weather <- cut(filtered$rain, breaks = c(-1, 0, 10, 20, Inf), labels = weather_levels)
days <- as.integer(weather$n)
names(days) <- weather$day_weather
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
filtered <- data %>%
filter(year == 2002, month == 7)
filtered$day_weather <- cut(filtered$rain, breaks = c(-1, 0, 10, 20, Inf), labels = weather_levels)
weather <- filtered %>%
group_by(day_weather) %>%
count() %>%
arrange(factor(day_weather))
days <- as.integer(weather$n)
names(days) <- weather$day_weather
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
runApp()
runApp()
runApp()
runApp()
runApp()
names(days) <- paste(weather$day_weather, as.integer(weather$n))
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
names(days) <- paste(weather$day_weather, "(", as.integer(weather$n), ")", sep = "")
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
names(days) <- paste(weather$day_weather, " (", as.integer(weather$n), ")", sep = "")
waffle(days, flip = TRUE, keep = TRUE, xlab = "days",
colors = c("#bee9ff", "#90aebf", "#62747f", "#34393f")[1:length(days)])
runApp()
runApp()
shiny::runApp()
weather$day_weather
filtered$day_weather
norain_streak <- filtered$day_weather %>%
mutate(start = (day_weather == "no rain"))
norain_streak <- filtered %>%
mutate(start = (day_weather == "no rain"))
norain_streak <- filtered %>%
mutate(start = (day_weather == "no rain")) %>%
mutate(streak_id = cumsum(start))
View(norain_streak)
norain_streak <- filtered %>%
mutate(start = (day_weather == "no rain"))
rle(filtered$start)
start = (filtered$day_weather == "no rain"))
start <- (filtered$day_weather == "no rain")
rle(filtered$start)
rle(start)
start
max(rle(start)$lengths)
norain_streak <- (filtered$day_weather == "no rain")
rain_streak <- (filtered$day_weather != "no rain")
rain_streak
rain_max <- max(rle(rain_streak)$lengths)
rain_max
rle(norain_streak)$lengths
rle(norain_streak)$values
norain_streak <- rle(filtered$day_weather == "no rain")
norain_streak
norain_streak[values == TRUE]
norain_streak$lengths[norain_streak$values == TRUE]
norain_streak$lengths
norain_max <- max(norain_streak$lengths[norain_streak$values == TRUE])
norain_max
rain_streak <- rle(filtered$day_weather != "no rain")
rain_max <- max(rain_streak$lengths[rain_streak$values == TRUE])
runApp()
data %>%
filter(year == 2014, month = 11)
data %>%
filter(year == 2014, month == 11)
data <- read.csv("data/rain_data.csv")
data[!is.na(data$rain),]
data <- data[!is.na(data$rain),]
setwd("~/Documents/GitHub/vancouver_rain")
write.csv(data, "data/rain_data.csv")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
